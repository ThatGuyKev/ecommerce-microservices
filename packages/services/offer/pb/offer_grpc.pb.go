// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.4
// source: _proto/offer.proto

package pb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OfferServiceClient is the client API for OfferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OfferServiceClient interface {
}

type offerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOfferServiceClient(cc grpc.ClientConnInterface) OfferServiceClient {
	return &offerServiceClient{cc}
}

// OfferServiceServer is the server API for OfferService service.
// All implementations must embed UnimplementedOfferServiceServer
// for forward compatibility
type OfferServiceServer interface {
	mustEmbedUnimplementedOfferServiceServer()
}

// UnimplementedOfferServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOfferServiceServer struct {
}

func (UnimplementedOfferServiceServer) mustEmbedUnimplementedOfferServiceServer() {}

// UnsafeOfferServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OfferServiceServer will
// result in compilation errors.
type UnsafeOfferServiceServer interface {
	mustEmbedUnimplementedOfferServiceServer()
}

func RegisterOfferServiceServer(s grpc.ServiceRegistrar, srv OfferServiceServer) {
	s.RegisterService(&OfferService_ServiceDesc, srv)
}

// OfferService_ServiceDesc is the grpc.ServiceDesc for OfferService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OfferService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "offer.OfferService",
	HandlerType: (*OfferServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "_proto/offer.proto",
}
