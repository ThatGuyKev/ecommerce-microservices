// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: _proto/product.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssetType int32

const (
	AssetType_IMAGE   AssetType = 0
	AssetType_VIDEO   AssetType = 1
	AssetType_EMBED   AssetType = 2
	AssetType_PDF     AssetType = 3
	AssetType_WORD    AssetType = 4
	AssetType_AUDIO   AssetType = 5
	AssetType_CSV     AssetType = 6
	AssetType_EXCEL   AssetType = 7
	AssetType_TEXT    AssetType = 8
	AssetType_UNKNOWN AssetType = 9
)

// Enum value maps for AssetType.
var (
	AssetType_name = map[int32]string{
		0: "IMAGE",
		1: "VIDEO",
		2: "EMBED",
		3: "PDF",
		4: "WORD",
		5: "AUDIO",
		6: "CSV",
		7: "EXCEL",
		8: "TEXT",
		9: "UNKNOWN",
	}
	AssetType_value = map[string]int32{
		"IMAGE":   0,
		"VIDEO":   1,
		"EMBED":   2,
		"PDF":     3,
		"WORD":    4,
		"AUDIO":   5,
		"CSV":     6,
		"EXCEL":   7,
		"TEXT":    8,
		"UNKNOWN": 9,
	}
)

func (x AssetType) Enum() *AssetType {
	p := new(AssetType)
	*p = x
	return p
}

func (x AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file___proto_product_proto_enumTypes[0].Descriptor()
}

func (AssetType) Type() protoreflect.EnumType {
	return &file___proto_product_proto_enumTypes[0]
}

func (x AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetType.Descriptor instead.
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{0}
}

type PromotionalProductType int32

const (
	PromotionalProductType_FEATURED   PromotionalProductType = 0
	PromotionalProductType_CROSS_SALE PromotionalProductType = 1
	PromotionalProductType_UP_SALE    PromotionalProductType = 2
)

// Enum value maps for PromotionalProductType.
var (
	PromotionalProductType_name = map[int32]string{
		0: "FEATURED",
		1: "CROSS_SALE",
		2: "UP_SALE",
	}
	PromotionalProductType_value = map[string]int32{
		"FEATURED":   0,
		"CROSS_SALE": 1,
		"UP_SALE":    2,
	}
)

func (x PromotionalProductType) Enum() *PromotionalProductType {
	p := new(PromotionalProductType)
	*p = x
	return p
}

func (x PromotionalProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionalProductType) Descriptor() protoreflect.EnumDescriptor {
	return file___proto_product_proto_enumTypes[1].Descriptor()
}

func (PromotionalProductType) Type() protoreflect.EnumType {
	return &file___proto_product_proto_enumTypes[1]
}

func (x PromotionalProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromotionalProductType.Descriptor instead.
func (PromotionalProductType) EnumDescriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{1}
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocaleId string `protobuf:"bytes,1,opt,name=localeId,proto3" json:"localeId,omitempty"`
	Region   string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetLocaleId() string {
	if x != nil {
		return x.LocaleId
	}
	return ""
}

func (x *Context) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ProductDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets              []*Asset                              `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	IncludedProducts    []*IncludedProductDetail              `protobuf:"bytes,2,rep,name=includedProducts,proto3" json:"includedProducts,omitempty"`
	Options             string                                `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"` // TODO: create option message
	ParentCategories    []*CategoryRef                        `protobuf:"bytes,4,rep,name=parentCategories,proto3" json:"parentCategories,omitempty"`
	PriceInfo           *PriceInfo                            `protobuf:"bytes,5,opt,name=priceInfo,proto3" json:"priceInfo,omitempty"`
	PromotionalProducts map[string]*PromotionalProductSummary `protobuf:"bytes,6,rep,name=promotionalProducts,proto3" json:"promotionalProducts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Variants            []*VariantDetail                      `protobuf:"bytes,7,rep,name=variants,proto3" json:"variants,omitempty"`
	VenderRef           string                                `protobuf:"bytes,8,opt,name=venderRef,proto3" json:"venderRef,omitempty"`
}

func (x *ProductDetails) Reset() {
	*x = ProductDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetails) ProtoMessage() {}

func (x *ProductDetails) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetails.ProtoReflect.Descriptor instead.
func (*ProductDetails) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductDetails) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ProductDetails) GetIncludedProducts() []*IncludedProductDetail {
	if x != nil {
		return x.IncludedProducts
	}
	return nil
}

func (x *ProductDetails) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *ProductDetails) GetParentCategories() []*CategoryRef {
	if x != nil {
		return x.ParentCategories
	}
	return nil
}

func (x *ProductDetails) GetPriceInfo() *PriceInfo {
	if x != nil {
		return x.PriceInfo
	}
	return nil
}

func (x *ProductDetails) GetPromotionalProducts() map[string]*PromotionalProductSummary {
	if x != nil {
		return x.PromotionalProducts
	}
	return nil
}

func (x *ProductDetails) GetVariants() []*VariantDetail {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *ProductDetails) GetVenderRef() string {
	if x != nil {
		return x.VenderRef
	}
	return ""
}

type PromotionalProductSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelatedProducts []*ProductDetails `protobuf:"bytes,1,rep,name=relatedProducts,proto3" json:"relatedProducts,omitempty"`
}

func (x *PromotionalProductSummary) Reset() {
	*x = PromotionalProductSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionalProductSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionalProductSummary) ProtoMessage() {}

func (x *PromotionalProductSummary) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionalProductSummary.ProtoReflect.Descriptor instead.
func (*PromotionalProductSummary) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{2}
}

func (x *PromotionalProductSummary) GetRelatedProducts() []*ProductDetails {
	if x != nil {
		return x.RelatedProducts
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       AssetType `protobuf:"varint,1,opt,name=type,proto3,enum=product.AssetType" json:"type,omitempty"`
	AltText    string    `protobuf:"bytes,2,opt,name=altText,proto3" json:"altText,omitempty"`
	Title      string    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ContentUrl string    `protobuf:"bytes,4,opt,name=contentUrl,proto3" json:"contentUrl,omitempty"`
	Tags       []string  `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{3}
}

func (x *Asset) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_IMAGE
}

func (x *Asset) GetAltText() string {
	if x != nil {
		return x.AltText
	}
	return ""
}

func (x *Asset) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Asset) GetContentUrl() string {
	if x != nil {
		return x.ContentUrl
	}
	return ""
}

func (x *Asset) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type IncludedProductDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product   *ProductDetails `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Variant   *VariantDetail  `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
	PriceInfo *PriceInfo      `protobuf:"bytes,3,opt,name=priceInfo,proto3" json:"priceInfo,omitempty"`
}

func (x *IncludedProductDetail) Reset() {
	*x = IncludedProductDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncludedProductDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludedProductDetail) ProtoMessage() {}

func (x *IncludedProductDetail) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludedProductDetail.ProtoReflect.Descriptor instead.
func (*IncludedProductDetail) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{4}
}

func (x *IncludedProductDetail) GetProduct() *ProductDetails {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *IncludedProductDetail) GetVariant() *VariantDetail {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *IncludedProductDetail) GetPriceInfo() *PriceInfo {
	if x != nil {
		return x.PriceInfo
	}
	return nil
}

type CategoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CategoryRef) Reset() {
	*x = CategoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryRef) ProtoMessage() {}

func (x *CategoryRef) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryRef.ProtoReflect.Descriptor instead.
func (*CategoryRef) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{5}
}

func (x *CategoryRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CategoryRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryRef) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type VariantDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceInfo *PriceInfo `protobuf:"bytes,1,opt,name=priceInfo,proto3" json:"priceInfo,omitempty"`
}

func (x *VariantDetail) Reset() {
	*x = VariantDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariantDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariantDetail) ProtoMessage() {}

func (x *VariantDetail) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariantDetail.ProtoReflect.Descriptor instead.
func (*VariantDetail) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{6}
}

func (x *VariantDetail) GetPriceInfo() *PriceInfo {
	if x != nil {
		return x.PriceInfo
	}
	return nil
}

type PriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price            string                      `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	PriceType        string                      `protobuf:"bytes,2,opt,name=priceType,proto3" json:"priceType,omitempty"`
	PriceTypeDetails map[string]*PriceTypeDetail `protobuf:"bytes,3,rep,name=priceTypeDetails,proto3" json:"priceTypeDetails,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PriceInfo) Reset() {
	*x = PriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo) ProtoMessage() {}

func (x *PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo.ProtoReflect.Descriptor instead.
func (*PriceInfo) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{7}
}

func (x *PriceInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PriceInfo) GetPriceType() string {
	if x != nil {
		return x.PriceType
	}
	return ""
}

func (x *PriceInfo) GetPriceTypeDetails() map[string]*PriceTypeDetail {
	if x != nil {
		return x.PriceTypeDetails
	}
	return nil
}

type PriceTypeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BestPrice string `protobuf:"bytes,1,opt,name=bestPrice,proto3" json:"bestPrice,omitempty"`
	PriceType string `protobuf:"bytes,2,opt,name=priceType,proto3" json:"priceType,omitempty"`
}

func (x *PriceTypeDetail) Reset() {
	*x = PriceTypeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceTypeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceTypeDetail) ProtoMessage() {}

func (x *PriceTypeDetail) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceTypeDetail.ProtoReflect.Descriptor instead.
func (*PriceTypeDetail) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{8}
}

func (x *PriceTypeDetail) GetBestPrice() string {
	if x != nil {
		return x.BestPrice
	}
	return ""
}

func (x *PriceTypeDetail) GetPriceType() string {
	if x != nil {
		return x.PriceType
	}
	return ""
}

type ProductSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets     []*Asset         `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	ItemChoice string           `protobuf:"bytes,2,opt,name=itemChoice,proto3" json:"itemChoice,omitempty"`
	PriceInfo  *PriceInfo       `protobuf:"bytes,3,opt,name=priceInfo,proto3" json:"priceInfo,omitempty"`
	Variants   []*VariantDetail `protobuf:"bytes,4,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *ProductSummary) Reset() {
	*x = ProductSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSummary) ProtoMessage() {}

func (x *ProductSummary) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSummary.ProtoReflect.Descriptor instead.
func (*ProductSummary) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{9}
}

func (x *ProductSummary) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ProductSummary) GetItemChoice() string {
	if x != nil {
		return x.ItemChoice
	}
	return ""
}

func (x *ProductSummary) GetPriceInfo() *PriceInfo {
	if x != nil {
		return x.PriceInfo
	}
	return nil
}

func (x *ProductSummary) GetVariants() []*VariantDetail {
	if x != nil {
		return x.Variants
	}
	return nil
}

type CategoryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets              []*Asset                        `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	Products            []*ProductSummary               `protobuf:"bytes,2,rep,name=products,proto3" json:"products,omitempty"`
	PromotionalProducts map[string]*PromotionalProducts `protobuf:"bytes,3,rep,name=promotionalProducts,proto3" json:"promotionalProducts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CategoryDetails) Reset() {
	*x = CategoryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryDetails) ProtoMessage() {}

func (x *CategoryDetails) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryDetails.ProtoReflect.Descriptor instead.
func (*CategoryDetails) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{10}
}

func (x *CategoryDetails) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *CategoryDetails) GetProducts() []*ProductSummary {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *CategoryDetails) GetPromotionalProducts() map[string]*PromotionalProducts {
	if x != nil {
		return x.PromotionalProducts
	}
	return nil
}

type PromotionalProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionalProducts []*PromotionalCategoryProductSummary `protobuf:"bytes,1,rep,name=promotionalProducts,proto3" json:"promotionalProducts,omitempty"`
}

func (x *PromotionalProducts) Reset() {
	*x = PromotionalProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionalProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionalProducts) ProtoMessage() {}

func (x *PromotionalProducts) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionalProducts.ProtoReflect.Descriptor instead.
func (*PromotionalProducts) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{11}
}

func (x *PromotionalProducts) GetPromotionalProducts() []*PromotionalCategoryProductSummary {
	if x != nil {
		return x.PromotionalProducts
	}
	return nil
}

type PromotionalCategoryProductSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionalProduct *ProductSummary        `protobuf:"bytes,1,opt,name=promotionalProduct,proto3" json:"promotionalProduct,omitempty"`
	Type               PromotionalProductType `protobuf:"varint,2,opt,name=type,proto3,enum=product.PromotionalProductType" json:"type,omitempty"`
}

func (x *PromotionalCategoryProductSummary) Reset() {
	*x = PromotionalCategoryProductSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionalCategoryProductSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionalCategoryProductSummary) ProtoMessage() {}

func (x *PromotionalCategoryProductSummary) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionalCategoryProductSummary.ProtoReflect.Descriptor instead.
func (*PromotionalCategoryProductSummary) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{12}
}

func (x *PromotionalCategoryProductSummary) GetPromotionalProduct() *ProductSummary {
	if x != nil {
		return x.PromotionalProduct
	}
	return nil
}

func (x *PromotionalCategoryProductSummary) GetType() PromotionalProductType {
	if x != nil {
		return x.Type
	}
	return PromotionalProductType_FEATURED
}

type NewCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url                     string                `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ExternalId              string                `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Description             string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TextCode                string                `protobuf:"bytes,5,opt,name=textCode,proto3" json:"textCode,omitempty"`
	ActiveStartDate         string                `protobuf:"bytes,6,opt,name=activeStartDate,proto3" json:"activeStartDate,omitempty"`
	ActiveEndDate           string                `protobuf:"bytes,7,opt,name=activeEndDate,proto3" json:"activeEndDate,omitempty"`
	DisplayTemplate         string                `protobuf:"bytes,8,opt,name=displayTemplate,proto3" json:"displayTemplate,omitempty"`
	MetaTitle               string                `protobuf:"bytes,9,opt,name=metaTitle,proto3" json:"metaTitle,omitempty"`
	MetaDescription         string                `protobuf:"bytes,10,opt,name=metaDescription,proto3" json:"metaDescription,omitempty"`
	ProductMembershipType   string                `protobuf:"bytes,11,opt,name=productMembershipType,proto3" json:"productMembershipType,omitempty"` // TODO: create enum for this
	ProductMembershipRule   string                `protobuf:"bytes,12,opt,name=productMembershipRule,proto3" json:"productMembershipRule,omitempty"`
	ProductMembershipLocale string                `protobuf:"bytes,13,opt,name=productMembershipLocale,proto3" json:"productMembershipLocale,omitempty"`
	ShowInSiteMap           bool                  `protobuf:"varint,14,opt,name=showInSiteMap,proto3" json:"showInSiteMap,omitempty"`
	Attributes              map[string]*Attribute `protobuf:"bytes,15,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ParentCategory          *CategoryRef          `protobuf:"bytes,16,opt,name=parentCategory,proto3" json:"parentCategory,omitempty"`
}

func (x *NewCategory) Reset() {
	*x = NewCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCategory) ProtoMessage() {}

func (x *NewCategory) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCategory.ProtoReflect.Descriptor instead.
func (*NewCategory) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{13}
}

func (x *NewCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewCategory) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NewCategory) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *NewCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewCategory) GetTextCode() string {
	if x != nil {
		return x.TextCode
	}
	return ""
}

func (x *NewCategory) GetActiveStartDate() string {
	if x != nil {
		return x.ActiveStartDate
	}
	return ""
}

func (x *NewCategory) GetActiveEndDate() string {
	if x != nil {
		return x.ActiveEndDate
	}
	return ""
}

func (x *NewCategory) GetDisplayTemplate() string {
	if x != nil {
		return x.DisplayTemplate
	}
	return ""
}

func (x *NewCategory) GetMetaTitle() string {
	if x != nil {
		return x.MetaTitle
	}
	return ""
}

func (x *NewCategory) GetMetaDescription() string {
	if x != nil {
		return x.MetaDescription
	}
	return ""
}

func (x *NewCategory) GetProductMembershipType() string {
	if x != nil {
		return x.ProductMembershipType
	}
	return ""
}

func (x *NewCategory) GetProductMembershipRule() string {
	if x != nil {
		return x.ProductMembershipRule
	}
	return ""
}

func (x *NewCategory) GetProductMembershipLocale() string {
	if x != nil {
		return x.ProductMembershipLocale
	}
	return ""
}

func (x *NewCategory) GetShowInSiteMap() bool {
	if x != nil {
		return x.ShowInSiteMap
	}
	return false
}

func (x *NewCategory) GetAttributes() map[string]*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *NewCategory) GetParentCategory() *CategoryRef {
	if x != nil {
		return x.ParentCategory
	}
	return nil
}

type NewProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uri                       string                `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Description               string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Sku                       string                `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	Currency                  string                `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"` // TODO: create enum for this
	DefaultPrice              *Price                `protobuf:"bytes,6,opt,name=defaultPrice,proto3" json:"defaultPrice,omitempty"`
	SalePrice                 *Price                `protobuf:"bytes,7,opt,name=salePrice,proto3" json:"salePrice,omitempty"`
	Cost                      *Price                `protobuf:"bytes,8,opt,name=cost,proto3" json:"cost,omitempty"`
	MetaTitle                 string                `protobuf:"bytes,9,opt,name=metaTitle,proto3" json:"metaTitle,omitempty"`
	MetaDescription           string                `protobuf:"bytes,10,opt,name=metaDescription,proto3" json:"metaDescription,omitempty"`
	DisplayTemplate           string                `protobuf:"bytes,11,opt,name=displayTemplate,proto3" json:"displayTemplate,omitempty"`
	AvailableOnline           bool                  `protobuf:"varint,12,opt,name=availableOnline,proto3" json:"availableOnline,omitempty"`
	Searchable                bool                  `protobuf:"varint,13,opt,name=searchable,proto3" json:"searchable,omitempty"`
	IndividuallySold          bool                  `protobuf:"varint,14,opt,name=individuallySold,proto3" json:"individuallySold,omitempty"`
	MerchandisingProduct      bool                  `protobuf:"varint,15,opt,name=merchandisingProduct,proto3" json:"merchandisingProduct,omitempty"`
	Keywords                  string                `protobuf:"bytes,16,opt,name=keywords,proto3" json:"keywords,omitempty"`
	ActiveStartDate           string                `protobuf:"bytes,17,opt,name=activeStartDate,proto3" json:"activeStartDate,omitempty"`
	ActiveEndDate             string                `protobuf:"bytes,18,opt,name=activeEndDate,proto3" json:"activeEndDate,omitempty"`
	Discountable              bool                  `protobuf:"varint,19,opt,name=discountable,proto3" json:"discountable,omitempty"`
	InventoryType             string                `protobuf:"bytes,20,opt,name=inventoryType,proto3" json:"inventoryType,omitempty"`                         // TODO: create enum for this
	InventoryAvailabilityType string                `protobuf:"bytes,21,opt,name=inventoryAvailabilityType,proto3" json:"inventoryAvailabilityType,omitempty"` // TODO: create enum for this
	EligibleForPickup         bool                  `protobuf:"varint,22,opt,name=eligibleForPickup,proto3" json:"eligibleForPickup,omitempty"`
	FulfillmentFlatRates      map[string]*Attribute `protobuf:"bytes,23,rep,name=fulfillmentFlatRates,proto3" json:"fulfillmentFlatRates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// TODO: create different type
	Attributes        map[string]*Attribute `protobuf:"bytes,24,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExternalId        string                `protobuf:"bytes,25,opt,name=externalId,proto3" json:"externalId,omitempty"`
	IncludedProducts  []*IncludedProduct    `protobuf:"bytes,26,rep,name=includedProducts,proto3" json:"includedProducts,omitempty"`
	Options           []*Option             `protobuf:"bytes,27,rep,name=options,proto3" json:"options,omitempty"`
	PrimaryCategoryId string                `protobuf:"bytes,28,opt,name=primaryCategoryId,proto3" json:"primaryCategoryId,omitempty"`
	BrandId           string                `protobuf:"bytes,29,opt,name=brandId,proto3" json:"brandId,omitempty"`
	PricingKey        int32                 `protobuf:"varint,30,opt,name=pricingKey,proto3" json:"pricingKey,omitempty"`
	MergingType       string                `protobuf:"bytes,31,opt,name=mergingType,proto3" json:"mergingType,omitempty"` // TODO: create enum for this
	ProductType       string                `protobuf:"bytes,32,opt,name=productType,proto3" json:"productType,omitempty"`
	Tags              string                `protobuf:"bytes,33,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *NewProduct) Reset() {
	*x = NewProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewProduct) ProtoMessage() {}

func (x *NewProduct) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewProduct.ProtoReflect.Descriptor instead.
func (*NewProduct) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{14}
}

func (x *NewProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewProduct) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *NewProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewProduct) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *NewProduct) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NewProduct) GetDefaultPrice() *Price {
	if x != nil {
		return x.DefaultPrice
	}
	return nil
}

func (x *NewProduct) GetSalePrice() *Price {
	if x != nil {
		return x.SalePrice
	}
	return nil
}

func (x *NewProduct) GetCost() *Price {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *NewProduct) GetMetaTitle() string {
	if x != nil {
		return x.MetaTitle
	}
	return ""
}

func (x *NewProduct) GetMetaDescription() string {
	if x != nil {
		return x.MetaDescription
	}
	return ""
}

func (x *NewProduct) GetDisplayTemplate() string {
	if x != nil {
		return x.DisplayTemplate
	}
	return ""
}

func (x *NewProduct) GetAvailableOnline() bool {
	if x != nil {
		return x.AvailableOnline
	}
	return false
}

func (x *NewProduct) GetSearchable() bool {
	if x != nil {
		return x.Searchable
	}
	return false
}

func (x *NewProduct) GetIndividuallySold() bool {
	if x != nil {
		return x.IndividuallySold
	}
	return false
}

func (x *NewProduct) GetMerchandisingProduct() bool {
	if x != nil {
		return x.MerchandisingProduct
	}
	return false
}

func (x *NewProduct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *NewProduct) GetActiveStartDate() string {
	if x != nil {
		return x.ActiveStartDate
	}
	return ""
}

func (x *NewProduct) GetActiveEndDate() string {
	if x != nil {
		return x.ActiveEndDate
	}
	return ""
}

func (x *NewProduct) GetDiscountable() bool {
	if x != nil {
		return x.Discountable
	}
	return false
}

func (x *NewProduct) GetInventoryType() string {
	if x != nil {
		return x.InventoryType
	}
	return ""
}

func (x *NewProduct) GetInventoryAvailabilityType() string {
	if x != nil {
		return x.InventoryAvailabilityType
	}
	return ""
}

func (x *NewProduct) GetEligibleForPickup() bool {
	if x != nil {
		return x.EligibleForPickup
	}
	return false
}

func (x *NewProduct) GetFulfillmentFlatRates() map[string]*Attribute {
	if x != nil {
		return x.FulfillmentFlatRates
	}
	return nil
}

func (x *NewProduct) GetAttributes() map[string]*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *NewProduct) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *NewProduct) GetIncludedProducts() []*IncludedProduct {
	if x != nil {
		return x.IncludedProducts
	}
	return nil
}

func (x *NewProduct) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *NewProduct) GetPrimaryCategoryId() string {
	if x != nil {
		return x.PrimaryCategoryId
	}
	return ""
}

func (x *NewProduct) GetBrandId() string {
	if x != nil {
		return x.BrandId
	}
	return ""
}

func (x *NewProduct) GetPricingKey() int32 {
	if x != nil {
		return x.PricingKey
	}
	return 0
}

func (x *NewProduct) GetMergingType() string {
	if x != nil {
		return x.MergingType
	}
	return ""
}

func (x *NewProduct) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *NewProduct) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type IncludedProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PricingKey             int32  `protobuf:"varint,2,opt,name=pricingKey,proto3" json:"pricingKey,omitempty"`
	Type                   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // TODO: create enum for this
	Label                  string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	DisplayOrder           int32  `protobuf:"varint,5,opt,name=displayOrder,proto3" json:"displayOrder,omitempty"`
	PricingModel           string `protobuf:"bytes,6,opt,name=pricingModel,proto3" json:"pricingModel,omitempty"` // TODO: create enum for this
	DiscountAllowed        bool   `protobuf:"varint,7,opt,name=discountAllowed,proto3" json:"discountAllowed,omitempty"`
	Quantity               int32  `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	VariantParentProductId string `protobuf:"bytes,9,opt,name=variantParentProductId,proto3" json:"variantParentProductId,omitempty"`
	Asset                  *Asset `protobuf:"bytes,10,opt,name=asset,proto3" json:"asset,omitempty"`
	ProductId              string `protobuf:"bytes,11,opt,name=productId,proto3" json:"productId,omitempty"`
	VariantId              string `protobuf:"bytes,12,opt,name=variantId,proto3" json:"variantId,omitempty"`
}

func (x *IncludedProduct) Reset() {
	*x = IncludedProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncludedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncludedProduct) ProtoMessage() {}

func (x *IncludedProduct) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncludedProduct.ProtoReflect.Descriptor instead.
func (*IncludedProduct) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{15}
}

func (x *IncludedProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IncludedProduct) GetPricingKey() int32 {
	if x != nil {
		return x.PricingKey
	}
	return 0
}

func (x *IncludedProduct) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IncludedProduct) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *IncludedProduct) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *IncludedProduct) GetPricingModel() string {
	if x != nil {
		return x.PricingModel
	}
	return ""
}

func (x *IncludedProduct) GetDiscountAllowed() bool {
	if x != nil {
		return x.DiscountAllowed
	}
	return false
}

func (x *IncludedProduct) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *IncludedProduct) GetVariantParentProductId() string {
	if x != nil {
		return x.VariantParentProductId
	}
	return ""
}

func (x *IncludedProduct) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *IncludedProduct) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *IncludedProduct) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label             string           `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Type              string           `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // TODO: create enum for this
	DisplayOrder      int32            `protobuf:"varint,4,opt,name=displayOrder,proto3" json:"displayOrder,omitempty"`
	AttributeChoice   *AttributeChoice `protobuf:"bytes,5,opt,name=attributeChoice,proto3" json:"attributeChoice,omitempty"`
	TemplateContextId string           `protobuf:"bytes,6,opt,name=templateContextId,proto3" json:"templateContextId,omitempty"`
	ItemChoice        *ItemChoice      `protobuf:"bytes,7,opt,name=itemChoice,proto3" json:"itemChoice,omitempty"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{16}
}

func (x *Option) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Option) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Option) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Option) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *Option) GetAttributeChoice() *AttributeChoice {
	if x != nil {
		return x.AttributeChoice
	}
	return nil
}

func (x *Option) GetTemplateContextId() string {
	if x != nil {
		return x.TemplateContextId
	}
	return ""
}

func (x *Option) GetItemChoice() *ItemChoice {
	if x != nil {
		return x.ItemChoice
	}
	return nil
}

type ItemChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType       string            `protobuf:"bytes,1,opt,name=targetType,proto3" json:"targetType,omitempty"`       // TODO: create enum for this
	SelectionType    string            `protobuf:"bytes,2,opt,name=selectionType,proto3" json:"selectionType,omitempty"` // TODO: create enum for this
	ChoiceKey        string            `protobuf:"bytes,3,opt,name=choiceKey,proto3" json:"choiceKey,omitempty"`
	MaximumQuantity  int32             `protobuf:"varint,4,opt,name=maximumQuantity,proto3" json:"maximumQuantity,omitempty"`
	MinimumQuantity  int32             `protobuf:"varint,5,opt,name=minimumQuantity,proto3" json:"minimumQuantity,omitempty"`
	PricingModel     string            `protobuf:"bytes,6,opt,name=pricingModel,proto3" json:"pricingModel,omitempty"`
	DiscountAllowed  bool              `protobuf:"varint,7,opt,name=discountAllowed,proto3" json:"discountAllowed,omitempty"`
	PricingKey       string            `protobuf:"bytes,8,opt,name=pricingKey,proto3" json:"pricingKey,omitempty"`
	Category         *CategoryRef      `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	DefaultProductId string            `protobuf:"bytes,10,opt,name=defaultProductId,proto3" json:"defaultProductId,omitempty"`
	DefaultVariantId string            `protobuf:"bytes,11,opt,name=defaultVariantId,proto3" json:"defaultVariantId,omitempty"`
	SpecificChoices  []*SpecificChoice `protobuf:"bytes,12,rep,name=specificChoices,proto3" json:"specificChoices,omitempty"`
}

func (x *ItemChoice) Reset() {
	*x = ItemChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemChoice) ProtoMessage() {}

func (x *ItemChoice) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemChoice.ProtoReflect.Descriptor instead.
func (*ItemChoice) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{17}
}

func (x *ItemChoice) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *ItemChoice) GetSelectionType() string {
	if x != nil {
		return x.SelectionType
	}
	return ""
}

func (x *ItemChoice) GetChoiceKey() string {
	if x != nil {
		return x.ChoiceKey
	}
	return ""
}

func (x *ItemChoice) GetMaximumQuantity() int32 {
	if x != nil {
		return x.MaximumQuantity
	}
	return 0
}

func (x *ItemChoice) GetMinimumQuantity() int32 {
	if x != nil {
		return x.MinimumQuantity
	}
	return 0
}

func (x *ItemChoice) GetPricingModel() string {
	if x != nil {
		return x.PricingModel
	}
	return ""
}

func (x *ItemChoice) GetDiscountAllowed() bool {
	if x != nil {
		return x.DiscountAllowed
	}
	return false
}

func (x *ItemChoice) GetPricingKey() string {
	if x != nil {
		return x.PricingKey
	}
	return ""
}

func (x *ItemChoice) GetCategory() *CategoryRef {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ItemChoice) GetDefaultProductId() string {
	if x != nil {
		return x.DefaultProductId
	}
	return ""
}

func (x *ItemChoice) GetDefaultVariantId() string {
	if x != nil {
		return x.DefaultVariantId
	}
	return ""
}

func (x *ItemChoice) GetSpecificChoices() []*SpecificChoice {
	if x != nil {
		return x.SpecificChoices
	}
	return nil
}

type SpecificChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // TODO: create enum for this
	NameOverride           string `protobuf:"bytes,2,opt,name=nameOverride,proto3" json:"nameOverride,omitempty"`
	PricingModel           string `protobuf:"bytes,3,opt,name=pricingModel,proto3" json:"pricingModel,omitempty"`
	DiscountAllowed        bool   `protobuf:"varint,4,opt,name=discountAllowed,proto3" json:"discountAllowed,omitempty"`
	PricingKey             string `protobuf:"bytes,5,opt,name=pricingKey,proto3" json:"pricingKey,omitempty"`
	VariantParentProductId string `protobuf:"bytes,6,opt,name=variantParentProductId,proto3" json:"variantParentProductId,omitempty"`
	Asset                  *Asset `protobuf:"bytes,7,opt,name=asset,proto3" json:"asset,omitempty"`
	ProductId              string `protobuf:"bytes,8,opt,name=productId,proto3" json:"productId,omitempty"`
	VariantId              string `protobuf:"bytes,9,opt,name=variantId,proto3" json:"variantId,omitempty"`
}

func (x *SpecificChoice) Reset() {
	*x = SpecificChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecificChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecificChoice) ProtoMessage() {}

func (x *SpecificChoice) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecificChoice.ProtoReflect.Descriptor instead.
func (*SpecificChoice) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{18}
}

func (x *SpecificChoice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpecificChoice) GetNameOverride() string {
	if x != nil {
		return x.NameOverride
	}
	return ""
}

func (x *SpecificChoice) GetPricingModel() string {
	if x != nil {
		return x.PricingModel
	}
	return ""
}

func (x *SpecificChoice) GetDiscountAllowed() bool {
	if x != nil {
		return x.DiscountAllowed
	}
	return false
}

func (x *SpecificChoice) GetPricingKey() string {
	if x != nil {
		return x.PricingKey
	}
	return ""
}

func (x *SpecificChoice) GetVariantParentProductId() string {
	if x != nil {
		return x.VariantParentProductId
	}
	return ""
}

func (x *SpecificChoice) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *SpecificChoice) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SpecificChoice) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

type AttributeChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName      string          `protobuf:"bytes,1,opt,name=attributeName,proto3" json:"attributeName,omitempty"`
	Type               string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // TODO: create enum for this
	Required           bool            `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	ValidationStrategy string          `protobuf:"bytes,4,opt,name=validationStrategy,proto3" json:"validationStrategy,omitempty"` // TODO: create enum for this
	ValidationType     string          `protobuf:"bytes,5,opt,name=validationType,proto3" json:"validationType,omitempty"`         // TODO create enum for this "REGEX"
	ValidationRule     string          `protobuf:"bytes,6,opt,name=validationRule,proto3" json:"validationRule,omitempty"`         // should only be REGEX
	AllowedValues      []*AllowedValue `protobuf:"bytes,7,rep,name=allowedValues,proto3" json:"allowedValues,omitempty"`
}

func (x *AttributeChoice) Reset() {
	*x = AttributeChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeChoice) ProtoMessage() {}

func (x *AttributeChoice) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeChoice.ProtoReflect.Descriptor instead.
func (*AttributeChoice) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{19}
}

func (x *AttributeChoice) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *AttributeChoice) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AttributeChoice) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *AttributeChoice) GetValidationStrategy() string {
	if x != nil {
		return x.ValidationStrategy
	}
	return ""
}

func (x *AttributeChoice) GetValidationType() string {
	if x != nil {
		return x.ValidationType
	}
	return ""
}

func (x *AttributeChoice) GetValidationRule() string {
	if x != nil {
		return x.ValidationRule
	}
	return ""
}

func (x *AttributeChoice) GetAllowedValues() []*AllowedValue {
	if x != nil {
		return x.AllowedValues
	}
	return nil
}

type AllowedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label        string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Value        string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DisplayOrder int32  `protobuf:"varint,4,opt,name=displayOrder,proto3" json:"displayOrder,omitempty"`
}

func (x *AllowedValue) Reset() {
	*x = AllowedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedValue) ProtoMessage() {}

func (x *AllowedValue) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedValue.ProtoReflect.Descriptor instead.
func (*AllowedValue) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{20}
}

func (x *AllowedValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AllowedValue) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AllowedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AllowedValue) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount   int32  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{21}
}

func (x *Price) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Price) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{22}
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *NewProduct `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *CreateProductReq) Reset() {
	*x = CreateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReq) ProtoMessage() {}

func (x *CreateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReq.ProtoReflect.Descriptor instead.
func (*CreateProductReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{23}
}

func (x *CreateProductReq) GetProduct() *NewProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type CreateProductRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NewProduct *NewProduct `protobuf:"bytes,3,opt,name=newProduct,proto3" json:"newProduct,omitempty"`
}

func (x *CreateProductRes) Reset() {
	*x = CreateProductRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRes) ProtoMessage() {}

func (x *CreateProductRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRes.ProtoReflect.Descriptor instead.
func (*CreateProductRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{24}
}

func (x *CreateProductRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateProductRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProductRes) GetNewProduct() *NewProduct {
	if x != nil {
		return x.NewProduct
	}
	return nil
}

type GetProductDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string   `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Ctx       *Context `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *GetProductDetailsReq) Reset() {
	*x = GetProductDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductDetailsReq) ProtoMessage() {}

func (x *GetProductDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductDetailsReq.ProtoReflect.Descriptor instead.
func (*GetProductDetailsReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{25}
}

func (x *GetProductDetailsReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetProductDetailsReq) GetCtx() *Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type GetProductDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProductDetails *ProductDetails `protobuf:"bytes,3,opt,name=productDetails,proto3" json:"productDetails,omitempty"`
}

func (x *GetProductDetailsRes) Reset() {
	*x = GetProductDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductDetailsRes) ProtoMessage() {}

func (x *GetProductDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductDetailsRes.ProtoReflect.Descriptor instead.
func (*GetProductDetailsRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{26}
}

func (x *GetProductDetailsRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductDetailsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductDetailsRes) GetProductDetails() *ProductDetails {
	if x != nil {
		return x.ProductDetails
	}
	return nil
}

type GetProductsByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIds []string `protobuf:"bytes,1,rep,name=productIds,proto3" json:"productIds,omitempty"`
}

func (x *GetProductsByIdsReq) Reset() {
	*x = GetProductsByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsByIdsReq) ProtoMessage() {}

func (x *GetProductsByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsByIdsReq.ProtoReflect.Descriptor instead.
func (*GetProductsByIdsReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{27}
}

func (x *GetProductsByIdsReq) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type GetProductsByIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Products []*ProductDetails `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *GetProductsByIdsRes) Reset() {
	*x = GetProductsByIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsByIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsByIdsRes) ProtoMessage() {}

func (x *GetProductsByIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsByIdsRes.ProtoReflect.Descriptor instead.
func (*GetProductsByIdsRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{28}
}

func (x *GetProductsByIdsRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductsByIdsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductsByIdsRes) GetProducts() []*ProductDetails {
	if x != nil {
		return x.Products
	}
	return nil
}

type UpdateProductAssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	AssetId   string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Asset     *Asset `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *UpdateProductAssetReq) Reset() {
	*x = UpdateProductAssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductAssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductAssetReq) ProtoMessage() {}

func (x *UpdateProductAssetReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductAssetReq.ProtoReflect.Descriptor instead.
func (*UpdateProductAssetReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateProductAssetReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateProductAssetReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *UpdateProductAssetReq) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type UpdateProductAssetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Asset   *Asset `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *UpdateProductAssetRes) Reset() {
	*x = UpdateProductAssetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductAssetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductAssetRes) ProtoMessage() {}

func (x *UpdateProductAssetRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductAssetRes.ProtoReflect.Descriptor instead.
func (*UpdateProductAssetRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateProductAssetRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateProductAssetRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateProductAssetRes) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type DeleteProductAssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	AssetId   string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *DeleteProductAssetReq) Reset() {
	*x = DeleteProductAssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductAssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductAssetReq) ProtoMessage() {}

func (x *DeleteProductAssetReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductAssetReq.ProtoReflect.Descriptor instead.
func (*DeleteProductAssetReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteProductAssetReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *DeleteProductAssetReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type DeleteProductAssetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status  string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteProductAssetRes) Reset() {
	*x = DeleteProductAssetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductAssetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductAssetRes) ProtoMessage() {}

func (x *DeleteProductAssetRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductAssetRes.ProtoReflect.Descriptor instead.
func (*DeleteProductAssetRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteProductAssetRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteProductAssetRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteProductAssetRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetProductAssetsByProductIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetProductAssetsByProductIdReq) Reset() {
	*x = GetProductAssetsByProductIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAssetsByProductIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAssetsByProductIdReq) ProtoMessage() {}

func (x *GetProductAssetsByProductIdReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAssetsByProductIdReq.ProtoReflect.Descriptor instead.
func (*GetProductAssetsByProductIdReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{33}
}

func (x *GetProductAssetsByProductIdReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductAssetsByProductIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Assets  []*Asset `protobuf:"bytes,3,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *GetProductAssetsByProductIdRes) Reset() {
	*x = GetProductAssetsByProductIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAssetsByProductIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAssetsByProductIdRes) ProtoMessage() {}

func (x *GetProductAssetsByProductIdRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAssetsByProductIdRes.ProtoReflect.Descriptor instead.
func (*GetProductAssetsByProductIdRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{34}
}

func (x *GetProductAssetsByProductIdRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductAssetsByProductIdRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductAssetsByProductIdRes) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type GetProductAssetByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	AssetId   string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *GetProductAssetByIdReq) Reset() {
	*x = GetProductAssetByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAssetByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAssetByIdReq) ProtoMessage() {}

func (x *GetProductAssetByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAssetByIdReq.ProtoReflect.Descriptor instead.
func (*GetProductAssetByIdReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{35}
}

func (x *GetProductAssetByIdReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetProductAssetByIdReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type GetProductAssetByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Asset   *Asset `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *GetProductAssetByIdRes) Reset() {
	*x = GetProductAssetByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAssetByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAssetByIdRes) ProtoMessage() {}

func (x *GetProductAssetByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAssetByIdRes.ProtoReflect.Descriptor instead.
func (*GetProductAssetByIdRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{36}
}

func (x *GetProductAssetByIdRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductAssetByIdRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductAssetByIdRes) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type CreateProductAssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *CreateProductAssetReq) Reset() {
	*x = CreateProductAssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductAssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductAssetReq) ProtoMessage() {}

func (x *CreateProductAssetReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductAssetReq.ProtoReflect.Descriptor instead.
func (*CreateProductAssetReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{37}
}

func (x *CreateProductAssetReq) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type CreateProductAssetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Asset   *Asset `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *CreateProductAssetRes) Reset() {
	*x = CreateProductAssetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductAssetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductAssetRes) ProtoMessage() {}

func (x *CreateProductAssetRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductAssetRes.ProtoReflect.Descriptor instead.
func (*CreateProductAssetRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{38}
}

func (x *CreateProductAssetRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateProductAssetRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProductAssetRes) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// TODO: research more about variants
type GetProductVariantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetProductVariantsReq) Reset() {
	*x = GetProductVariantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductVariantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductVariantsReq) ProtoMessage() {}

func (x *GetProductVariantsReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductVariantsReq.ProtoReflect.Descriptor instead.
func (*GetProductVariantsReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{39}
}

func (x *GetProductVariantsReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductVariantsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Variants []*ProductDetails `protobuf:"bytes,3,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *GetProductVariantsRes) Reset() {
	*x = GetProductVariantsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductVariantsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductVariantsRes) ProtoMessage() {}

func (x *GetProductVariantsRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductVariantsRes.ProtoReflect.Descriptor instead.
func (*GetProductVariantsRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{40}
}

func (x *GetProductVariantsRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductVariantsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductVariantsRes) GetVariants() []*ProductDetails {
	if x != nil {
		return x.Variants
	}
	return nil
}

type CreateProductVariantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string      `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Variant   *NewProduct `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *CreateProductVariantReq) Reset() {
	*x = CreateProductVariantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductVariantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductVariantReq) ProtoMessage() {}

func (x *CreateProductVariantReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductVariantReq.ProtoReflect.Descriptor instead.
func (*CreateProductVariantReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{41}
}

func (x *CreateProductVariantReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateProductVariantReq) GetVariant() *NewProduct {
	if x != nil {
		return x.Variant
	}
	return nil
}

type CreateProductVariantRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Variant *ProductDetails `protobuf:"bytes,3,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *CreateProductVariantRes) Reset() {
	*x = CreateProductVariantRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductVariantRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductVariantRes) ProtoMessage() {}

func (x *CreateProductVariantRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductVariantRes.ProtoReflect.Descriptor instead.
func (*CreateProductVariantRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{42}
}

func (x *CreateProductVariantRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateProductVariantRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProductVariantRes) GetVariant() *ProductDetails {
	if x != nil {
		return x.Variant
	}
	return nil
}

type UpdateProductVariantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId      string      `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	VariantId      string      `protobuf:"bytes,2,opt,name=variantId,proto3" json:"variantId,omitempty"`
	UpdatedVariant *NewProduct `protobuf:"bytes,3,opt,name=updatedVariant,proto3" json:"updatedVariant,omitempty"`
}

func (x *UpdateProductVariantReq) Reset() {
	*x = UpdateProductVariantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductVariantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductVariantReq) ProtoMessage() {}

func (x *UpdateProductVariantReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductVariantReq.ProtoReflect.Descriptor instead.
func (*UpdateProductVariantReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateProductVariantReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateProductVariantReq) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *UpdateProductVariantReq) GetUpdatedVariant() *NewProduct {
	if x != nil {
		return x.UpdatedVariant
	}
	return nil
}

type UpdateProductVariantRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedVarinat *ProductDetails `protobuf:"bytes,3,opt,name=updatedVarinat,proto3" json:"updatedVarinat,omitempty"`
}

func (x *UpdateProductVariantRes) Reset() {
	*x = UpdateProductVariantRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductVariantRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductVariantRes) ProtoMessage() {}

func (x *UpdateProductVariantRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductVariantRes.ProtoReflect.Descriptor instead.
func (*UpdateProductVariantRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateProductVariantRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateProductVariantRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateProductVariantRes) GetUpdatedVarinat() *ProductDetails {
	if x != nil {
		return x.UpdatedVarinat
	}
	return nil
}

type DeleteProductVariantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProudctId string `protobuf:"bytes,1,opt,name=proudctId,proto3" json:"proudctId,omitempty"`
	VariantId string `protobuf:"bytes,2,opt,name=variantId,proto3" json:"variantId,omitempty"`
}

func (x *DeleteProductVariantReq) Reset() {
	*x = DeleteProductVariantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductVariantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductVariantReq) ProtoMessage() {}

func (x *DeleteProductVariantReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductVariantReq.ProtoReflect.Descriptor instead.
func (*DeleteProductVariantReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteProductVariantReq) GetProudctId() string {
	if x != nil {
		return x.ProudctId
	}
	return ""
}

func (x *DeleteProductVariantReq) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

type DeleteProductVariantRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status  string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteProductVariantRes) Reset() {
	*x = DeleteProductVariantRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductVariantRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductVariantRes) ProtoMessage() {}

func (x *DeleteProductVariantRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductVariantRes.ProtoReflect.Descriptor instead.
func (*DeleteProductVariantRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteProductVariantRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteProductVariantRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteProductVariantRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *NewCategory `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *CreateCategoryReq) Reset() {
	*x = CreateCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryReq) ProtoMessage() {}

func (x *CreateCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryReq.ProtoReflect.Descriptor instead.
func (*CreateCategoryReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{47}
}

func (x *CreateCategoryReq) GetCategory() *NewCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

type CreateCategoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Category *CategoryDetails `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *CreateCategoryRes) Reset() {
	*x = CreateCategoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCategoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRes) ProtoMessage() {}

func (x *CreateCategoryRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRes.ProtoReflect.Descriptor instead.
func (*CreateCategoryRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{48}
}

func (x *CreateCategoryRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateCategoryRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateCategoryRes) GetCategory() *CategoryDetails {
	if x != nil {
		return x.Category
	}
	return nil
}

type GetCategoryDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string   `protobuf:"bytes,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Ctx        *Context `protobuf:"bytes,2,opt,name=ctx,proto3" json:"ctx,omitempty"`
}

func (x *GetCategoryDetailsReq) Reset() {
	*x = GetCategoryDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryDetailsReq) ProtoMessage() {}

func (x *GetCategoryDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryDetailsReq.ProtoReflect.Descriptor instead.
func (*GetCategoryDetailsReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{49}
}

func (x *GetCategoryDetailsReq) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *GetCategoryDetailsReq) GetCtx() *Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

type GetCategoryDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CategroyDetails *CategoryDetails `protobuf:"bytes,3,opt,name=categroyDetails,proto3" json:"categroyDetails,omitempty"`
}

func (x *GetCategoryDetailsRes) Reset() {
	*x = GetCategoryDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryDetailsRes) ProtoMessage() {}

func (x *GetCategoryDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryDetailsRes.ProtoReflect.Descriptor instead.
func (*GetCategoryDetailsRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{50}
}

func (x *GetCategoryDetailsRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetCategoryDetailsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCategoryDetailsRes) GetCategroyDetails() *CategoryDetails {
	if x != nil {
		return x.CategroyDetails
	}
	return nil
}

type GetCategoriesByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoriesIds []string `protobuf:"bytes,1,rep,name=categoriesIds,proto3" json:"categoriesIds,omitempty"`
}

func (x *GetCategoriesByIdsReq) Reset() {
	*x = GetCategoriesByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoriesByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesByIdsReq) ProtoMessage() {}

func (x *GetCategoriesByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesByIdsReq.ProtoReflect.Descriptor instead.
func (*GetCategoriesByIdsReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{51}
}

func (x *GetCategoriesByIdsReq) GetCategoriesIds() []string {
	if x != nil {
		return x.CategoriesIds
	}
	return nil
}

type GetCategoriesByIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Categories []*CategoryDetails `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *GetCategoriesByIdsRes) Reset() {
	*x = GetCategoriesByIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoriesByIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesByIdsRes) ProtoMessage() {}

func (x *GetCategoriesByIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesByIdsRes.ProtoReflect.Descriptor instead.
func (*GetCategoriesByIdsRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{52}
}

func (x *GetCategoriesByIdsRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetCategoriesByIdsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCategoriesByIdsRes) GetCategories() []*CategoryDetails {
	if x != nil {
		return x.Categories
	}
	return nil
}

type GetProductCategoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetProductCategoriesReq) Reset() {
	*x = GetProductCategoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductCategoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoriesReq) ProtoMessage() {}

func (x *GetProductCategoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoriesReq.ProtoReflect.Descriptor instead.
func (*GetProductCategoriesReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{53}
}

func (x *GetProductCategoriesReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductCategoriesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Categories []*CategoryDetails `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *GetProductCategoriesRes) Reset() {
	*x = GetProductCategoriesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductCategoriesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoriesRes) ProtoMessage() {}

func (x *GetProductCategoriesRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoriesRes.ProtoReflect.Descriptor instead.
func (*GetProductCategoriesRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{54}
}

func (x *GetProductCategoriesRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetProductCategoriesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProductCategoriesRes) GetCategories() []*CategoryDetails {
	if x != nil {
		return x.Categories
	}
	return nil
}

type GetOptionTemplatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOptionTemplatesReq) Reset() {
	*x = GetOptionTemplatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionTemplatesReq) ProtoMessage() {}

func (x *GetOptionTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionTemplatesReq.ProtoReflect.Descriptor instead.
func (*GetOptionTemplatesReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{55}
}

type GetOptionTemplatesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Option  []*Option `protobuf:"bytes,3,rep,name=option,proto3" json:"option,omitempty"`
}

func (x *GetOptionTemplatesRes) Reset() {
	*x = GetOptionTemplatesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionTemplatesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionTemplatesRes) ProtoMessage() {}

func (x *GetOptionTemplatesRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionTemplatesRes.ProtoReflect.Descriptor instead.
func (*GetOptionTemplatesRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{56}
}

func (x *GetOptionTemplatesRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetOptionTemplatesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOptionTemplatesRes) GetOption() []*Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type GetOptionTemplateByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=templateId,proto3" json:"templateId,omitempty"`
}

func (x *GetOptionTemplateByIdReq) Reset() {
	*x = GetOptionTemplateByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionTemplateByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionTemplateByIdReq) ProtoMessage() {}

func (x *GetOptionTemplateByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionTemplateByIdReq.ProtoReflect.Descriptor instead.
func (*GetOptionTemplateByIdReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{57}
}

func (x *GetOptionTemplateByIdReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type GetOptionTemplateByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OptionTemplate *Option `protobuf:"bytes,3,opt,name=optionTemplate,proto3" json:"optionTemplate,omitempty"`
}

func (x *GetOptionTemplateByIdRes) Reset() {
	*x = GetOptionTemplateByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptionTemplateByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptionTemplateByIdRes) ProtoMessage() {}

func (x *GetOptionTemplateByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptionTemplateByIdRes.ProtoReflect.Descriptor instead.
func (*GetOptionTemplateByIdRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{58}
}

func (x *GetOptionTemplateByIdRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetOptionTemplateByIdRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOptionTemplateByIdRes) GetOptionTemplate() *Option {
	if x != nil {
		return x.OptionTemplate
	}
	return nil
}

type CreateOptionTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OptionTemplate *Option `protobuf:"bytes,2,opt,name=optionTemplate,proto3" json:"optionTemplate,omitempty"`
}

func (x *CreateOptionTemplateReq) Reset() {
	*x = CreateOptionTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOptionTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOptionTemplateReq) ProtoMessage() {}

func (x *CreateOptionTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOptionTemplateReq.ProtoReflect.Descriptor instead.
func (*CreateOptionTemplateReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{59}
}

func (x *CreateOptionTemplateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOptionTemplateReq) GetOptionTemplate() *Option {
	if x != nil {
		return x.OptionTemplate
	}
	return nil
}

type CreateOptionTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OptionTemplate *Option `protobuf:"bytes,3,opt,name=optionTemplate,proto3" json:"optionTemplate,omitempty"`
}

func (x *CreateOptionTemplateRes) Reset() {
	*x = CreateOptionTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOptionTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOptionTemplateRes) ProtoMessage() {}

func (x *CreateOptionTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOptionTemplateRes.ProtoReflect.Descriptor instead.
func (*CreateOptionTemplateRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{60}
}

func (x *CreateOptionTemplateRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateOptionTemplateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateOptionTemplateRes) GetOptionTemplate() *Option {
	if x != nil {
		return x.OptionTemplate
	}
	return nil
}

type DeleteOptionTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=templateId,proto3" json:"templateId,omitempty"`
}

func (x *DeleteOptionTemplateReq) Reset() {
	*x = DeleteOptionTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOptionTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOptionTemplateReq) ProtoMessage() {}

func (x *DeleteOptionTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOptionTemplateReq.ProtoReflect.Descriptor instead.
func (*DeleteOptionTemplateReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteOptionTemplateReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type DeleteOptionTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Status  string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteOptionTemplateRes) Reset() {
	*x = DeleteOptionTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOptionTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOptionTemplateRes) ProtoMessage() {}

func (x *DeleteOptionTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOptionTemplateRes.ProtoReflect.Descriptor instead.
func (*DeleteOptionTemplateRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteOptionTemplateRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteOptionTemplateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteOptionTemplateRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateOptionTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId      string  `protobuf:"bytes,1,opt,name=templateId,proto3" json:"templateId,omitempty"`
	UpdatedTemplate *Option `protobuf:"bytes,2,opt,name=updatedTemplate,proto3" json:"updatedTemplate,omitempty"`
}

func (x *UpdateOptionTemplateReq) Reset() {
	*x = UpdateOptionTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOptionTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOptionTemplateReq) ProtoMessage() {}

func (x *UpdateOptionTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOptionTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateOptionTemplateReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateOptionTemplateReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateOptionTemplateReq) GetUpdatedTemplate() *Option {
	if x != nil {
		return x.UpdatedTemplate
	}
	return nil
}

type UpdateOptionTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedTemplate *Option `protobuf:"bytes,3,opt,name=updatedTemplate,proto3" json:"updatedTemplate,omitempty"`
}

func (x *UpdateOptionTemplateRes) Reset() {
	*x = UpdateOptionTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOptionTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOptionTemplateRes) ProtoMessage() {}

func (x *UpdateOptionTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOptionTemplateRes.ProtoReflect.Descriptor instead.
func (*UpdateOptionTemplateRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateOptionTemplateRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateOptionTemplateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateOptionTemplateRes) GetUpdatedTemplate() *Option {
	if x != nil {
		return x.UpdatedTemplate
	}
	return nil
}

type GenerateOptionsFromTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId       string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	GenerationType  string `protobuf:"bytes,2,opt,name=generationType,proto3" json:"generationType,omitempty"` // TODO: create enum for this
	TemplateId      string `protobuf:"bytes,3,opt,name=templateId,proto3" json:"templateId,omitempty"`
	TemplateGroupId string `protobuf:"bytes,4,opt,name=templateGroupId,proto3" json:"templateGroupId,omitempty"`
}

func (x *GenerateOptionsFromTemplateReq) Reset() {
	*x = GenerateOptionsFromTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOptionsFromTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOptionsFromTemplateReq) ProtoMessage() {}

func (x *GenerateOptionsFromTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOptionsFromTemplateReq.ProtoReflect.Descriptor instead.
func (*GenerateOptionsFromTemplateReq) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{65}
}

func (x *GenerateOptionsFromTemplateReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GenerateOptionsFromTemplateReq) GetGenerationType() string {
	if x != nil {
		return x.GenerationType
	}
	return ""
}

func (x *GenerateOptionsFromTemplateReq) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *GenerateOptionsFromTemplateReq) GetTemplateGroupId() string {
	if x != nil {
		return x.TemplateGroupId
	}
	return ""
}

type GenerateOptionsFromTemplateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedProduct *NewProduct `protobuf:"bytes,3,opt,name=updatedProduct,proto3" json:"updatedProduct,omitempty"`
}

func (x *GenerateOptionsFromTemplateRes) Reset() {
	*x = GenerateOptionsFromTemplateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file___proto_product_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOptionsFromTemplateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOptionsFromTemplateRes) ProtoMessage() {}

func (x *GenerateOptionsFromTemplateRes) ProtoReflect() protoreflect.Message {
	mi := &file___proto_product_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOptionsFromTemplateRes.ProtoReflect.Descriptor instead.
func (*GenerateOptionsFromTemplateRes) Descriptor() ([]byte, []int) {
	return file___proto_product_proto_rawDescGZIP(), []int{66}
}

func (x *GenerateOptionsFromTemplateRes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GenerateOptionsFromTemplateRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenerateOptionsFromTemplateRes) GetUpdatedProduct() *NewProduct {
	if x != nil {
		return x.UpdatedProduct
	}
	return nil
}

var File___proto_product_proto protoreflect.FileDescriptor

var file___proto_product_proto_rawDesc = []byte{
	0x0a, 0x14, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x3d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0xb4,
	0x04, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x40, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52,
	0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x62, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x1a, 0x6a, 0x0a, 0x18, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x15,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x0b,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x41, 0x0a, 0x0d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x5d, 0x0a, 0x15,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x0f, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x26, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xb9, 0x02, 0x0a, 0x0f,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x1a, 0x64, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x5c,
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xa1, 0x01, 0x0a,
	0x21, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xf6, 0x05, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x6d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x15,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x53, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x53, 0x69, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x44, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x51, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xef, 0x0b, 0x0a, 0x0a, 0x4e, 0x65,
	0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x6b, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x32,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x74,
	0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x6c, 0x79,
	0x53, 0x6f, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x14,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x61, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x14, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x1a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x10,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x12, 0x29, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x5b, 0x0a, 0x19, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x93, 0x03, 0x0a, 0x0f,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x8d, 0x02, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x0f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0a,
	0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x22, 0xff, 0x03, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x16,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x6e, 0x0a,
	0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3b, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x21, 0x0a, 0x09, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x75, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x6e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x58, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x03, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74,
	0x78, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x35, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x22, 0x6b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x4f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0x5d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x7a, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x88,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x61, 0x74, 0x22, 0x55, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x75, 0x64, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x77, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x22, 0x89,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x72,
	0x6f, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x72, 0x6f, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x73, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x22, 0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x22, 0x66, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x82, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2a, 0x75, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x42, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x05, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x53, 0x56, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x58, 0x43, 0x45,
	0x4c, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x08, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x09, 0x2a, 0x43, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x5f, 0x53, 0x41, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x5f, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x32,
	0xeb, 0x05, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0e, 0x5a,
	0x0c, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file___proto_product_proto_rawDescOnce sync.Once
	file___proto_product_proto_rawDescData = file___proto_product_proto_rawDesc
)

func file___proto_product_proto_rawDescGZIP() []byte {
	file___proto_product_proto_rawDescOnce.Do(func() {
		file___proto_product_proto_rawDescData = protoimpl.X.CompressGZIP(file___proto_product_proto_rawDescData)
	})
	return file___proto_product_proto_rawDescData
}

var file___proto_product_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file___proto_product_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file___proto_product_proto_goTypes = []interface{}{
	(AssetType)(0),                            // 0: product.AssetType
	(PromotionalProductType)(0),               // 1: product.PromotionalProductType
	(*Context)(nil),                           // 2: product.Context
	(*ProductDetails)(nil),                    // 3: product.ProductDetails
	(*PromotionalProductSummary)(nil),         // 4: product.PromotionalProductSummary
	(*Asset)(nil),                             // 5: product.Asset
	(*IncludedProductDetail)(nil),             // 6: product.IncludedProductDetail
	(*CategoryRef)(nil),                       // 7: product.CategoryRef
	(*VariantDetail)(nil),                     // 8: product.VariantDetail
	(*PriceInfo)(nil),                         // 9: product.PriceInfo
	(*PriceTypeDetail)(nil),                   // 10: product.PriceTypeDetail
	(*ProductSummary)(nil),                    // 11: product.ProductSummary
	(*CategoryDetails)(nil),                   // 12: product.CategoryDetails
	(*PromotionalProducts)(nil),               // 13: product.PromotionalProducts
	(*PromotionalCategoryProductSummary)(nil), // 14: product.PromotionalCategoryProductSummary
	(*NewCategory)(nil),                       // 15: product.NewCategory
	(*NewProduct)(nil),                        // 16: product.NewProduct
	(*IncludedProduct)(nil),                   // 17: product.IncludedProduct
	(*Option)(nil),                            // 18: product.Option
	(*ItemChoice)(nil),                        // 19: product.ItemChoice
	(*SpecificChoice)(nil),                    // 20: product.SpecificChoice
	(*AttributeChoice)(nil),                   // 21: product.AttributeChoice
	(*AllowedValue)(nil),                      // 22: product.AllowedValue
	(*Price)(nil),                             // 23: product.Price
	(*Attribute)(nil),                         // 24: product.Attribute
	(*CreateProductReq)(nil),                  // 25: product.CreateProductReq
	(*CreateProductRes)(nil),                  // 26: product.CreateProductRes
	(*GetProductDetailsReq)(nil),              // 27: product.GetProductDetailsReq
	(*GetProductDetailsRes)(nil),              // 28: product.GetProductDetailsRes
	(*GetProductsByIdsReq)(nil),               // 29: product.GetProductsByIdsReq
	(*GetProductsByIdsRes)(nil),               // 30: product.GetProductsByIdsRes
	(*UpdateProductAssetReq)(nil),             // 31: product.UpdateProductAssetReq
	(*UpdateProductAssetRes)(nil),             // 32: product.UpdateProductAssetRes
	(*DeleteProductAssetReq)(nil),             // 33: product.DeleteProductAssetReq
	(*DeleteProductAssetRes)(nil),             // 34: product.DeleteProductAssetRes
	(*GetProductAssetsByProductIdReq)(nil),    // 35: product.GetProductAssetsByProductIdReq
	(*GetProductAssetsByProductIdRes)(nil),    // 36: product.GetProductAssetsByProductIdRes
	(*GetProductAssetByIdReq)(nil),            // 37: product.GetProductAssetByIdReq
	(*GetProductAssetByIdRes)(nil),            // 38: product.GetProductAssetByIdRes
	(*CreateProductAssetReq)(nil),             // 39: product.CreateProductAssetReq
	(*CreateProductAssetRes)(nil),             // 40: product.CreateProductAssetRes
	(*GetProductVariantsReq)(nil),             // 41: product.GetProductVariantsReq
	(*GetProductVariantsRes)(nil),             // 42: product.GetProductVariantsRes
	(*CreateProductVariantReq)(nil),           // 43: product.CreateProductVariantReq
	(*CreateProductVariantRes)(nil),           // 44: product.CreateProductVariantRes
	(*UpdateProductVariantReq)(nil),           // 45: product.UpdateProductVariantReq
	(*UpdateProductVariantRes)(nil),           // 46: product.UpdateProductVariantRes
	(*DeleteProductVariantReq)(nil),           // 47: product.DeleteProductVariantReq
	(*DeleteProductVariantRes)(nil),           // 48: product.DeleteProductVariantRes
	(*CreateCategoryReq)(nil),                 // 49: product.CreateCategoryReq
	(*CreateCategoryRes)(nil),                 // 50: product.CreateCategoryRes
	(*GetCategoryDetailsReq)(nil),             // 51: product.GetCategoryDetailsReq
	(*GetCategoryDetailsRes)(nil),             // 52: product.GetCategoryDetailsRes
	(*GetCategoriesByIdsReq)(nil),             // 53: product.GetCategoriesByIdsReq
	(*GetCategoriesByIdsRes)(nil),             // 54: product.GetCategoriesByIdsRes
	(*GetProductCategoriesReq)(nil),           // 55: product.GetProductCategoriesReq
	(*GetProductCategoriesRes)(nil),           // 56: product.GetProductCategoriesRes
	(*GetOptionTemplatesReq)(nil),             // 57: product.GetOptionTemplatesReq
	(*GetOptionTemplatesRes)(nil),             // 58: product.GetOptionTemplatesRes
	(*GetOptionTemplateByIdReq)(nil),          // 59: product.GetOptionTemplateByIdReq
	(*GetOptionTemplateByIdRes)(nil),          // 60: product.GetOptionTemplateByIdRes
	(*CreateOptionTemplateReq)(nil),           // 61: product.CreateOptionTemplateReq
	(*CreateOptionTemplateRes)(nil),           // 62: product.CreateOptionTemplateRes
	(*DeleteOptionTemplateReq)(nil),           // 63: product.DeleteOptionTemplateReq
	(*DeleteOptionTemplateRes)(nil),           // 64: product.DeleteOptionTemplateRes
	(*UpdateOptionTemplateReq)(nil),           // 65: product.UpdateOptionTemplateReq
	(*UpdateOptionTemplateRes)(nil),           // 66: product.UpdateOptionTemplateRes
	(*GenerateOptionsFromTemplateReq)(nil),    // 67: product.GenerateOptionsFromTemplateReq
	(*GenerateOptionsFromTemplateRes)(nil),    // 68: product.GenerateOptionsFromTemplateRes
	nil,                                       // 69: product.ProductDetails.PromotionalProductsEntry
	nil,                                       // 70: product.PriceInfo.PriceTypeDetailsEntry
	nil,                                       // 71: product.CategoryDetails.PromotionalProductsEntry
	nil,                                       // 72: product.NewCategory.AttributesEntry
	nil,                                       // 73: product.NewProduct.FulfillmentFlatRatesEntry
	nil,                                       // 74: product.NewProduct.AttributesEntry
}
var file___proto_product_proto_depIdxs = []int32{
	5,  // 0: product.ProductDetails.assets:type_name -> product.Asset
	6,  // 1: product.ProductDetails.includedProducts:type_name -> product.IncludedProductDetail
	7,  // 2: product.ProductDetails.parentCategories:type_name -> product.CategoryRef
	9,  // 3: product.ProductDetails.priceInfo:type_name -> product.PriceInfo
	69, // 4: product.ProductDetails.promotionalProducts:type_name -> product.ProductDetails.PromotionalProductsEntry
	8,  // 5: product.ProductDetails.variants:type_name -> product.VariantDetail
	3,  // 6: product.PromotionalProductSummary.relatedProducts:type_name -> product.ProductDetails
	0,  // 7: product.Asset.type:type_name -> product.AssetType
	3,  // 8: product.IncludedProductDetail.product:type_name -> product.ProductDetails
	8,  // 9: product.IncludedProductDetail.variant:type_name -> product.VariantDetail
	9,  // 10: product.IncludedProductDetail.priceInfo:type_name -> product.PriceInfo
	9,  // 11: product.VariantDetail.priceInfo:type_name -> product.PriceInfo
	70, // 12: product.PriceInfo.priceTypeDetails:type_name -> product.PriceInfo.PriceTypeDetailsEntry
	5,  // 13: product.ProductSummary.assets:type_name -> product.Asset
	9,  // 14: product.ProductSummary.priceInfo:type_name -> product.PriceInfo
	8,  // 15: product.ProductSummary.variants:type_name -> product.VariantDetail
	5,  // 16: product.CategoryDetails.assets:type_name -> product.Asset
	11, // 17: product.CategoryDetails.products:type_name -> product.ProductSummary
	71, // 18: product.CategoryDetails.promotionalProducts:type_name -> product.CategoryDetails.PromotionalProductsEntry
	14, // 19: product.PromotionalProducts.promotionalProducts:type_name -> product.PromotionalCategoryProductSummary
	11, // 20: product.PromotionalCategoryProductSummary.promotionalProduct:type_name -> product.ProductSummary
	1,  // 21: product.PromotionalCategoryProductSummary.type:type_name -> product.PromotionalProductType
	72, // 22: product.NewCategory.attributes:type_name -> product.NewCategory.AttributesEntry
	7,  // 23: product.NewCategory.parentCategory:type_name -> product.CategoryRef
	23, // 24: product.NewProduct.defaultPrice:type_name -> product.Price
	23, // 25: product.NewProduct.salePrice:type_name -> product.Price
	23, // 26: product.NewProduct.cost:type_name -> product.Price
	73, // 27: product.NewProduct.fulfillmentFlatRates:type_name -> product.NewProduct.FulfillmentFlatRatesEntry
	74, // 28: product.NewProduct.attributes:type_name -> product.NewProduct.AttributesEntry
	17, // 29: product.NewProduct.includedProducts:type_name -> product.IncludedProduct
	18, // 30: product.NewProduct.options:type_name -> product.Option
	5,  // 31: product.IncludedProduct.asset:type_name -> product.Asset
	21, // 32: product.Option.attributeChoice:type_name -> product.AttributeChoice
	19, // 33: product.Option.itemChoice:type_name -> product.ItemChoice
	7,  // 34: product.ItemChoice.category:type_name -> product.CategoryRef
	20, // 35: product.ItemChoice.specificChoices:type_name -> product.SpecificChoice
	5,  // 36: product.SpecificChoice.asset:type_name -> product.Asset
	22, // 37: product.AttributeChoice.allowedValues:type_name -> product.AllowedValue
	16, // 38: product.CreateProductReq.product:type_name -> product.NewProduct
	16, // 39: product.CreateProductRes.newProduct:type_name -> product.NewProduct
	2,  // 40: product.GetProductDetailsReq.ctx:type_name -> product.Context
	3,  // 41: product.GetProductDetailsRes.productDetails:type_name -> product.ProductDetails
	3,  // 42: product.GetProductsByIdsRes.products:type_name -> product.ProductDetails
	5,  // 43: product.UpdateProductAssetReq.asset:type_name -> product.Asset
	5,  // 44: product.UpdateProductAssetRes.asset:type_name -> product.Asset
	5,  // 45: product.GetProductAssetsByProductIdRes.assets:type_name -> product.Asset
	5,  // 46: product.GetProductAssetByIdRes.asset:type_name -> product.Asset
	5,  // 47: product.CreateProductAssetReq.asset:type_name -> product.Asset
	5,  // 48: product.CreateProductAssetRes.asset:type_name -> product.Asset
	3,  // 49: product.GetProductVariantsRes.variants:type_name -> product.ProductDetails
	16, // 50: product.CreateProductVariantReq.variant:type_name -> product.NewProduct
	3,  // 51: product.CreateProductVariantRes.variant:type_name -> product.ProductDetails
	16, // 52: product.UpdateProductVariantReq.updatedVariant:type_name -> product.NewProduct
	3,  // 53: product.UpdateProductVariantRes.updatedVarinat:type_name -> product.ProductDetails
	15, // 54: product.CreateCategoryReq.category:type_name -> product.NewCategory
	12, // 55: product.CreateCategoryRes.category:type_name -> product.CategoryDetails
	2,  // 56: product.GetCategoryDetailsReq.ctx:type_name -> product.Context
	12, // 57: product.GetCategoryDetailsRes.categroyDetails:type_name -> product.CategoryDetails
	12, // 58: product.GetCategoriesByIdsRes.categories:type_name -> product.CategoryDetails
	12, // 59: product.GetProductCategoriesRes.categories:type_name -> product.CategoryDetails
	18, // 60: product.GetOptionTemplatesRes.option:type_name -> product.Option
	18, // 61: product.GetOptionTemplateByIdRes.optionTemplate:type_name -> product.Option
	18, // 62: product.CreateOptionTemplateReq.optionTemplate:type_name -> product.Option
	18, // 63: product.CreateOptionTemplateRes.optionTemplate:type_name -> product.Option
	18, // 64: product.UpdateOptionTemplateReq.updatedTemplate:type_name -> product.Option
	18, // 65: product.UpdateOptionTemplateRes.updatedTemplate:type_name -> product.Option
	16, // 66: product.GenerateOptionsFromTemplateRes.updatedProduct:type_name -> product.NewProduct
	4,  // 67: product.ProductDetails.PromotionalProductsEntry.value:type_name -> product.PromotionalProductSummary
	10, // 68: product.PriceInfo.PriceTypeDetailsEntry.value:type_name -> product.PriceTypeDetail
	13, // 69: product.CategoryDetails.PromotionalProductsEntry.value:type_name -> product.PromotionalProducts
	24, // 70: product.NewCategory.AttributesEntry.value:type_name -> product.Attribute
	24, // 71: product.NewProduct.FulfillmentFlatRatesEntry.value:type_name -> product.Attribute
	24, // 72: product.NewProduct.AttributesEntry.value:type_name -> product.Attribute
	29, // 73: product.ProductService.GetProductsByIds:input_type -> product.GetProductsByIdsReq
	27, // 74: product.ProductService.GetProductDetails:input_type -> product.GetProductDetailsReq
	35, // 75: product.ProductService.GetProductAssetsByProductId:input_type -> product.GetProductAssetsByProductIdReq
	37, // 76: product.ProductService.GetProductAssetById:input_type -> product.GetProductAssetByIdReq
	41, // 77: product.ProductService.GetProductVariants:input_type -> product.GetProductVariantsReq
	51, // 78: product.ProductService.GetCategoryDetails:input_type -> product.GetCategoryDetailsReq
	53, // 79: product.ProductService.GetCategoriesByIds:input_type -> product.GetCategoriesByIdsReq
	55, // 80: product.ProductService.GetProductCategories:input_type -> product.GetProductCategoriesReq
	30, // 81: product.ProductService.GetProductsByIds:output_type -> product.GetProductsByIdsRes
	28, // 82: product.ProductService.GetProductDetails:output_type -> product.GetProductDetailsRes
	36, // 83: product.ProductService.GetProductAssetsByProductId:output_type -> product.GetProductAssetsByProductIdRes
	38, // 84: product.ProductService.GetProductAssetById:output_type -> product.GetProductAssetByIdRes
	42, // 85: product.ProductService.GetProductVariants:output_type -> product.GetProductVariantsRes
	52, // 86: product.ProductService.GetCategoryDetails:output_type -> product.GetCategoryDetailsRes
	54, // 87: product.ProductService.GetCategoriesByIds:output_type -> product.GetCategoriesByIdsRes
	56, // 88: product.ProductService.GetProductCategories:output_type -> product.GetProductCategoriesRes
	81, // [81:89] is the sub-list for method output_type
	73, // [73:81] is the sub-list for method input_type
	73, // [73:73] is the sub-list for extension type_name
	73, // [73:73] is the sub-list for extension extendee
	0,  // [0:73] is the sub-list for field type_name
}

func init() { file___proto_product_proto_init() }
func file___proto_product_proto_init() {
	if File___proto_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file___proto_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionalProductSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncludedProductDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariantDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceTypeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionalProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionalCategoryProductSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncludedProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecificChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsByIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductAssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductAssetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductAssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductAssetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAssetsByProductIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAssetsByProductIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAssetByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAssetByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductAssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductAssetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductVariantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductVariantsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductVariantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductVariantRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductVariantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductVariantRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductVariantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductVariantRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCategoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoriesByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoriesByIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductCategoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductCategoriesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionTemplatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionTemplatesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionTemplateByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptionTemplateByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOptionTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOptionTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOptionTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOptionTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOptionTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOptionTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOptionsFromTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file___proto_product_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOptionsFromTemplateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file___proto_product_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file___proto_product_proto_goTypes,
		DependencyIndexes: file___proto_product_proto_depIdxs,
		EnumInfos:         file___proto_product_proto_enumTypes,
		MessageInfos:      file___proto_product_proto_msgTypes,
	}.Build()
	File___proto_product_proto = out.File
	file___proto_product_proto_rawDesc = nil
	file___proto_product_proto_goTypes = nil
	file___proto_product_proto_depIdxs = nil
}
