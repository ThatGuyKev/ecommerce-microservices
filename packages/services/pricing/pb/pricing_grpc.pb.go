// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.4
// source: _proto/pricing.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PricingServiceClient is the client API for PricingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PricingServiceClient interface {
	GetPriceInfo(ctx context.Context, in *GetPriceInfoReq, opts ...grpc.CallOption) (*GetPriceInfoRes, error)
	GetPricesLists(ctx context.Context, in *GetPricesListsReq, opts ...grpc.CallOption) (*GetPricesListsRes, error)
	CreatePriceList(ctx context.Context, in *CreatePriceListReq, opts ...grpc.CallOption) (*CreatePriceListRes, error)
	GetPricesById(ctx context.Context, in *GetPricesByIdReq, opts ...grpc.CallOption) (*GetPricesByIdRes, error)
	DeletePriceList(ctx context.Context, in *DeletePriceListReq, opts ...grpc.CallOption) (*DeletePriceListRes, error)
	UpdatePriceList(ctx context.Context, in *UpdatePriceListReq, opts ...grpc.CallOption) (*UpdatePriceListRes, error)
	CreatePriceDataById(ctx context.Context, in *CreatePriceDataByIdReq, opts ...grpc.CallOption) (*CreatePriceDataByIdRes, error)
	DeletePriceDataById(ctx context.Context, in *DeletePriceDataByIdReq, opts ...grpc.CallOption) (*DeletePriceDataByIdRes, error)
	UpdatePriceDataById(ctx context.Context, in *UpdatePriceDataByIdReq, opts ...grpc.CallOption) (*UpdatePriceDataByIdRes, error)
	GetPriceDataById(ctx context.Context, in *GetPriceDataByIdReq, opts ...grpc.CallOption) (*GetPriceDataByIdRes, error)
}

type pricingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPricingServiceClient(cc grpc.ClientConnInterface) PricingServiceClient {
	return &pricingServiceClient{cc}
}

func (c *pricingServiceClient) GetPriceInfo(ctx context.Context, in *GetPriceInfoReq, opts ...grpc.CallOption) (*GetPriceInfoRes, error) {
	out := new(GetPriceInfoRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/GetPriceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) GetPricesLists(ctx context.Context, in *GetPricesListsReq, opts ...grpc.CallOption) (*GetPricesListsRes, error) {
	out := new(GetPricesListsRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/GetPricesLists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) CreatePriceList(ctx context.Context, in *CreatePriceListReq, opts ...grpc.CallOption) (*CreatePriceListRes, error) {
	out := new(CreatePriceListRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/CreatePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) GetPricesById(ctx context.Context, in *GetPricesByIdReq, opts ...grpc.CallOption) (*GetPricesByIdRes, error) {
	out := new(GetPricesByIdRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/GetPricesById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) DeletePriceList(ctx context.Context, in *DeletePriceListReq, opts ...grpc.CallOption) (*DeletePriceListRes, error) {
	out := new(DeletePriceListRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/DeletePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) UpdatePriceList(ctx context.Context, in *UpdatePriceListReq, opts ...grpc.CallOption) (*UpdatePriceListRes, error) {
	out := new(UpdatePriceListRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/UpdatePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) CreatePriceDataById(ctx context.Context, in *CreatePriceDataByIdReq, opts ...grpc.CallOption) (*CreatePriceDataByIdRes, error) {
	out := new(CreatePriceDataByIdRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/CreatePriceDataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) DeletePriceDataById(ctx context.Context, in *DeletePriceDataByIdReq, opts ...grpc.CallOption) (*DeletePriceDataByIdRes, error) {
	out := new(DeletePriceDataByIdRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/DeletePriceDataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) UpdatePriceDataById(ctx context.Context, in *UpdatePriceDataByIdReq, opts ...grpc.CallOption) (*UpdatePriceDataByIdRes, error) {
	out := new(UpdatePriceDataByIdRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/UpdatePriceDataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pricingServiceClient) GetPriceDataById(ctx context.Context, in *GetPriceDataByIdReq, opts ...grpc.CallOption) (*GetPriceDataByIdRes, error) {
	out := new(GetPriceDataByIdRes)
	err := c.cc.Invoke(ctx, "/pricing.PricingService/GetPriceDataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PricingServiceServer is the server API for PricingService service.
// All implementations must embed UnimplementedPricingServiceServer
// for forward compatibility
type PricingServiceServer interface {
	GetPriceInfo(context.Context, *GetPriceInfoReq) (*GetPriceInfoRes, error)
	GetPricesLists(context.Context, *GetPricesListsReq) (*GetPricesListsRes, error)
	CreatePriceList(context.Context, *CreatePriceListReq) (*CreatePriceListRes, error)
	GetPricesById(context.Context, *GetPricesByIdReq) (*GetPricesByIdRes, error)
	DeletePriceList(context.Context, *DeletePriceListReq) (*DeletePriceListRes, error)
	UpdatePriceList(context.Context, *UpdatePriceListReq) (*UpdatePriceListRes, error)
	CreatePriceDataById(context.Context, *CreatePriceDataByIdReq) (*CreatePriceDataByIdRes, error)
	DeletePriceDataById(context.Context, *DeletePriceDataByIdReq) (*DeletePriceDataByIdRes, error)
	UpdatePriceDataById(context.Context, *UpdatePriceDataByIdReq) (*UpdatePriceDataByIdRes, error)
	GetPriceDataById(context.Context, *GetPriceDataByIdReq) (*GetPriceDataByIdRes, error)
	mustEmbedUnimplementedPricingServiceServer()
}

// UnimplementedPricingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPricingServiceServer struct {
}

func (UnimplementedPricingServiceServer) GetPriceInfo(context.Context, *GetPriceInfoReq) (*GetPriceInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceInfo not implemented")
}
func (UnimplementedPricingServiceServer) GetPricesLists(context.Context, *GetPricesListsReq) (*GetPricesListsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPricesLists not implemented")
}
func (UnimplementedPricingServiceServer) CreatePriceList(context.Context, *CreatePriceListReq) (*CreatePriceListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePriceList not implemented")
}
func (UnimplementedPricingServiceServer) GetPricesById(context.Context, *GetPricesByIdReq) (*GetPricesByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPricesById not implemented")
}
func (UnimplementedPricingServiceServer) DeletePriceList(context.Context, *DeletePriceListReq) (*DeletePriceListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePriceList not implemented")
}
func (UnimplementedPricingServiceServer) UpdatePriceList(context.Context, *UpdatePriceListReq) (*UpdatePriceListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePriceList not implemented")
}
func (UnimplementedPricingServiceServer) CreatePriceDataById(context.Context, *CreatePriceDataByIdReq) (*CreatePriceDataByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePriceDataById not implemented")
}
func (UnimplementedPricingServiceServer) DeletePriceDataById(context.Context, *DeletePriceDataByIdReq) (*DeletePriceDataByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePriceDataById not implemented")
}
func (UnimplementedPricingServiceServer) UpdatePriceDataById(context.Context, *UpdatePriceDataByIdReq) (*UpdatePriceDataByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePriceDataById not implemented")
}
func (UnimplementedPricingServiceServer) GetPriceDataById(context.Context, *GetPriceDataByIdReq) (*GetPriceDataByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceDataById not implemented")
}
func (UnimplementedPricingServiceServer) mustEmbedUnimplementedPricingServiceServer() {}

// UnsafePricingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PricingServiceServer will
// result in compilation errors.
type UnsafePricingServiceServer interface {
	mustEmbedUnimplementedPricingServiceServer()
}

func RegisterPricingServiceServer(s grpc.ServiceRegistrar, srv PricingServiceServer) {
	s.RegisterService(&PricingService_ServiceDesc, srv)
}

func _PricingService_GetPriceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).GetPriceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/GetPriceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).GetPriceInfo(ctx, req.(*GetPriceInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_GetPricesLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPricesListsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).GetPricesLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/GetPricesLists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).GetPricesLists(ctx, req.(*GetPricesListsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_CreatePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePriceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).CreatePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/CreatePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).CreatePriceList(ctx, req.(*CreatePriceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_GetPricesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPricesByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).GetPricesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/GetPricesById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).GetPricesById(ctx, req.(*GetPricesByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_DeletePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePriceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).DeletePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/DeletePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).DeletePriceList(ctx, req.(*DeletePriceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_UpdatePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePriceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).UpdatePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/UpdatePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).UpdatePriceList(ctx, req.(*UpdatePriceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_CreatePriceDataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePriceDataByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).CreatePriceDataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/CreatePriceDataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).CreatePriceDataById(ctx, req.(*CreatePriceDataByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_DeletePriceDataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePriceDataByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).DeletePriceDataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/DeletePriceDataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).DeletePriceDataById(ctx, req.(*DeletePriceDataByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_UpdatePriceDataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePriceDataByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).UpdatePriceDataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/UpdatePriceDataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).UpdatePriceDataById(ctx, req.(*UpdatePriceDataByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PricingService_GetPriceDataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceDataByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingServiceServer).GetPriceDataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricing.PricingService/GetPriceDataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingServiceServer).GetPriceDataById(ctx, req.(*GetPriceDataByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

// PricingService_ServiceDesc is the grpc.ServiceDesc for PricingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PricingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pricing.PricingService",
	HandlerType: (*PricingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPriceInfo",
			Handler:    _PricingService_GetPriceInfo_Handler,
		},
		{
			MethodName: "GetPricesLists",
			Handler:    _PricingService_GetPricesLists_Handler,
		},
		{
			MethodName: "CreatePriceList",
			Handler:    _PricingService_CreatePriceList_Handler,
		},
		{
			MethodName: "GetPricesById",
			Handler:    _PricingService_GetPricesById_Handler,
		},
		{
			MethodName: "DeletePriceList",
			Handler:    _PricingService_DeletePriceList_Handler,
		},
		{
			MethodName: "UpdatePriceList",
			Handler:    _PricingService_UpdatePriceList_Handler,
		},
		{
			MethodName: "CreatePriceDataById",
			Handler:    _PricingService_CreatePriceDataById_Handler,
		},
		{
			MethodName: "DeletePriceDataById",
			Handler:    _PricingService_DeletePriceDataById_Handler,
		},
		{
			MethodName: "UpdatePriceDataById",
			Handler:    _PricingService_UpdatePriceDataById_Handler,
		},
		{
			MethodName: "GetPriceDataById",
			Handler:    _PricingService_GetPriceDataById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "_proto/pricing.proto",
}
